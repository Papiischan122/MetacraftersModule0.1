pragma solidity >=0.7.0 <0.9.0;

contract GreatestNumber {

    uint public number1;
    uint public number2;
    uint public number3;
    uint public number4;
    address public owner;

    constructor() {
        owner = msg.sender;
    }

    modifier onlyOwner { 
        require(owner == msg.sender, "Only the contract owner can access this function");
        _;
    }

    function setNumbers(uint _number1, uint _number2, uint _number3, uint _number4) public onlyOwner {
        number1 = _number1;
        number2 = _number2;
        number3 = _number3;
        number4 = _number4;
    }

    function getGreatestNumber() public view onlyOwner returns(uint) {
        if (number1 > number2 && number1 > number3 && number1 > number4) {
            return number1;
        } else if (number2 > number1 && number2 > number3 && number2 > number4) {
            return number2;
        } else if (number3 > number1 && number3 > number2 && number3 > number4) {
            return number3;
        } else {
            return number4;
        }
    }
}


